---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
      tier: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: db
    spec:
      containers:
      - image: mysql:8.0.21
        name: mysql
        resources: {}
        envFrom:
          - secretRef:
              name: db-mysql
        ports:
        - containerPort: 3306
          name: mysql
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-config-volume ## specify volume name
          mountPath: /etc/mysql/conf.d/default_auth.cnf ## path to mount file
          subPath: default_auth ## name of config
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-db-pv-claim
      - name: mysql-config-volume ## volume name
        configMap:
          name: mysql-config ## name of ConfigMap